.\" Automatically generated by Pandoc 3.0.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SSTOOLS" "1" "March 04, 2023" "sstools 0.2b" "User Manual"
.hy
.SH NAME
.PP
sstools - KISS tools for make snapshots in a Btrfs filesystem
.SH SYNOPSYS
.PP
\f[B]sstd\f[R]
.PP
\f[B]ssmk\f[R] [\f[I]-vh\f[R]] \f[I]-i\f[R] subvolume \f[I]-o\f[R] pool
\f[I]-f\f[R] frequency
.PP
\f[B]sscl\f[R] [\f[I]-vh\f[R]] \f[I]-p\f[R] pool \f[I]-q\f[R] quota
.PP
\f[B]ssct\f[R] [\f[I]-h\f[R]] [\f[I]-v\f[R]] path
.SH DESCRIPTION
.PP
SSTools is made up of several small programs that work together,
functioning as one.
.SS Currently main tools
.IP \[bu] 2
\f[I]sstd\f[R]: Snapshot tools daemon.
.IP \[bu] 2
\f[I]ssmk\f[R]: For making snapshots.
.IP \[bu] 2
\f[I]sscl\f[R]: For cleaning snapshots.
.SS Additional tools
.PP
Additionally, it also integrates the following tools:
.IP \[bu] 2
\f[I]ssct\f[R]: Shows creation and changed time a snapshot.
.SS Not implemented yet tools
.IP \[bu] 2
_ssst: Shows some statics of interest.
.IP \[bu] 2
\f[I]ssgui\f[R]: Graphic user interface.
.SS Basic operation
.PP
On startup \f[B]sstd\f[R] loads \f[V]/etc/sstab\f[R] (see sstab(5)) into
memory and periodically creates or deletes snapshots in the specified
\f[I]pool\f[R] directory.
.PP
For this task a systemd service file is provided.
.PP
Edit \f[V]/etc/sstab\f[R] at your preferences and then start and enable
\f[V]sstd.service\f[R].
.SS \f[V]/etc/sstab\f[R]
.PP
A simple table, named \f[V]/etc/sstab\f[R] is provided as configuration
file.
.PP
The configuration file defines all the stuff about what and how the
snapshots of subvolumes are taked.
Read more about it in snapman(5).
.SS Example file:
.IP
.nf
\f[C]
# subvolume    pool               frequency    quota

/              /backup/root/boot  0            30
/              /backup/root/diary 1d           30
/home          /backup/home/30m   30m          20
\f[R]
.fi
.PP
In every execution loop, if more time than indicated by the
\f[I]frequency\f[R] has passed, a new snapshot of the
\f[I]subvolume\f[R] will be created inside of its own \f[I]pool\f[R],
until reach the \f[I]quota\f[R], and then, when quota were overpassed,
it will deletes the oldest snapshot until fit to the quota.
.SH INCLUDED TOOLS
.SS sstd
.PP
Is the daemon.
Loads \f[V]/etc/sstab\f[R] into memory and starts an infinite loop where
firstly runs \f[V]ssmk\f[R] and then \f[V]sscl\f[R] for each line of
such file.
.PP
The loop repeats itself every 5 seconds.
.SS ssmk
.PP
Takes a source soubvolume and creates a snapshot and a destination
directory (called pool), where previous snapshots were stored.
.PP
Checks if the last snapshot in such pool is enough old and if there are
differences with source subvolume, and then takes a new snapshot.
.PP
The snapshot name is automatically set in the \f[V]date\f[R] format
\f[B]\f[VB]+%Y-%m-%d_%H-%M-%S\f[B]\f[R].
.SS sscl
.PP
Takes a pool directory and checks if there are more snapshots than
indicated as maximum by the quota.
If then, deletes the oldest snapshots until the quota is met.
.SS ssct
.PP
Shows when subvolume was created and when an inode in the subvolume was
last change.
.SH NOT YET IMPLEMENTED/INCLUDED TOOLS
.SS ssst
.PP
Show snapshot statistics.
.SS ssgui
.PP
Graphic user interface.
.PP
   *   *   *   *   *
.SH \f[I]TODO\f[R]
.IP \[bu] 2
Signals handling.
.SH SEE ALSO
.PP
sstab(5)
.SH AUTHOR
.PP
Manuel Domínguez López
.SH COPYRIGHT
.PP
GPLv3
